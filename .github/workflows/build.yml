name: Build

on: [push]

env:
  BUILD_TYPE: Release
  BUILD_CONFIG: RelWithDebInfo

jobs:
###############################################################################
# Build Desktop
###############################################################################
  build_desktop:
    runs-on: ${{ matrix.os }}
    # if: ${{false}}
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-18.04, ubuntu-20.04, windows-2019]
        # os: [macos-10.15, ubuntu-16.04, ubuntu-18.04, ubuntu-20.04, windows-2019]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

###############################################################################
# Create Build Environment
###############################################################################

    - name: Create Build Environment [macos-10.15]
      if: matrix.os == 'macos-10.15'
      run: |
        echo $GITHUB_WORKSPACE
        echo "OPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1" >> $GITHUB_ENV

    - name: Create Build Environment [ununtu all]
      shell: bash
      if: matrix.os == 'ubuntu-16.04' || matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'
      run: |
        sudo apt-get update
        sudo apt-get install libssl-dev curl libxi-dev libcups2-dev -y

    # - name: Create Build Environment [ununtu 16.04]
    #   shell: bash
    #   if: matrix.os == 'ubuntu-16.04'
    #   run: |
    #     sudo apt-get install g++-7 gcc-7
    #     echo "CC=gcc-7" >> $GITHUB_ENV
    #     echo "CXX=g++-7" >> $GITHUB_ENV

    - name: Create Build Environment [windows]
      shell: bash
      if: matrix.os == 'windows-2019'
      run: |
        git clone --depth=1 https://github.com/BeamMW/libs.git c:/beam-libs
        echo "OPENSSL_ROOT_DIR=c:\beam-libs\openssl" >> $GITHUB_ENV

    - name: Download boost [macos-10.15]
      if: matrix.os == 'macos-10.15'
      run: |
        curl -O https://raw.githubusercontent.com/Homebrew/homebrew-core/5da5895add2f6b9320d654dd844d4827f6876c8b/Formula/boost.rb
        brew install ./boost.rb 

    - name: Download boost [ununtu all]
      shell: bash
      if: matrix.os == 'ubuntu-16.04' || matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'
      run: |
        git clone https://github.com/BeamMW/boost_prebuild_${{matrix.os}}.git ${{runner.workspace}}/boost_prebuild
        echo "BOOST_INCLUDEDIR=${{runner.workspace}}/boost_prebuild/include" >> $GITHUB_ENV
        echo "BOOST_LIBRARYDIR=${{runner.workspace}}/boost_prebuild/lib/" >> $GITHUB_ENV

###############################################################################
# Configure CMake
###############################################################################
    - name: Configure CMake [macos-10.15 && ununtu all]
      if: matrix.os != 'windows-2019'
      run: |
        # git apply 3rdparty/protobuf-patch.diff
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DDEBUG_MESSAGES_IN_RELEASE_MODE=On -DBEAM_LINK_TYPE=Static -DBRANCH_NAME=$GITHUB_REF -DBEAM_HW_WALLET=Off .

    - name: Configure CMake [windows]
      shell: bash
      if: matrix.os == 'windows-2019'
      run: |
        # git apply 3rdparty/protobuf-patch.diff
        cmake -G "Visual Studio 16 2019" -A x64 -DBOOST_ROOT=$BOOST_ROOT_1_72_0 -DCMAKE_BUILD_TYPE=$BUILD_CONFIG -DBEAM_LINK_TYPE=Static -DBRANCH_NAME=$GITHUB_REF -DBEAM_BUILD_JNI=On -DBEAM_HW_WALLET=Off .

    - name: Save version info
      shell: bash
      run: |
        echo "BEAM_VERSION=$(cat beam_version.gen)" >> $GITHUB_ENV
        echo "BEAM_TARGET_SUFFIX=-masternet" >> $GITHUB_ENV
        rm beam_version.gen

###############################################################################
# Build
###############################################################################
    - name: Build [macos-10.15]
      if: matrix.os == 'macos-10.15'
      run: cmake --build . --parallel --config $BUILD_TYPE

    - name: Build [ununtu all]
      shell: bash
      if: matrix.os == 'ubuntu-16.04' || matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'
      run: make -j$(nproc)

    - name: Build [windows]
      shell: bash
      if: matrix.os == 'windows-2019'
      run: cmake --build . --parallel --config $BUILD_CONFIG

###############################################################################
# Test
###############################################################################
    - name: Test [macos-10.15]
      if: matrix.os == 'macos-10.15'
      continue-on-error: false
      run: ctest -C $BUILD_TYPE --verbose

    - name: Test [ununtu all]
      if: matrix.os == 'ubuntu-16.04' || matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'
      continue-on-error: false
      shell: bash
      run: ctest --verbose

    - name: Test [windows]
      if: matrix.os == 'windows-2019'
      continue-on-error: false
      shell: bash
      run: ctest -C $BUILD_CONFIG --verbose

###############################################################################
# Collect artifacts
###############################################################################

    - name: Collect [macos-10.15 && ununtu all]
      shell: bash
      if: matrix.os != 'windows-2019'
      run: |
        mkdir artifacts
        cp beam/beam-node${{env.BEAM_TARGET_SUFFIX}} artifacts/beam-node${{env.BEAM_TARGET_SUFFIX}}
        cp beam/beam-node.cfg artifacts/beam-node.cfg
        cp wallet/cli/beam-wallet${{env.BEAM_TARGET_SUFFIX}} artifacts/beam-wallet${{env.BEAM_TARGET_SUFFIX}}
        cp wallet/cli/beam-wallet.cfg artifacts/beam-wallet.cfg
        cp wallet/api/wallet-api${{env.BEAM_TARGET_SUFFIX}} artifacts/wallet-api${{env.BEAM_TARGET_SUFFIX}}
        cp wallet/api/wallet-api.cfg artifacts/wallet-api.cfg
        cp explorer/explorer-node${{env.BEAM_TARGET_SUFFIX}} artifacts/explorer-node${{env.BEAM_TARGET_SUFFIX}}
        cp explorer/explorer-node.cfg artifacts/explorer-node.cfg
        cp wallet/broadcaster/broadcaster${{env.BEAM_TARGET_SUFFIX}} artifacts/broadcaster${{env.BEAM_TARGET_SUFFIX}}

    - name: Collect [windows]
      shell: bash
      if: matrix.os == 'windows-2019'
      run: |
        mkdir artifacts
        cp beam/${{env.BUILD_CONFIG}}/beam-node${{env.BEAM_TARGET_SUFFIX}}.exe artifacts/beam-node${{env.BEAM_TARGET_SUFFIX}}.exe
        cp beam/beam-node.cfg artifacts/beam-node.cfg
        cp wallet/cli/${{env.BUILD_CONFIG}}/beam-wallet${{env.BEAM_TARGET_SUFFIX}}.exe artifacts/beam-wallet${{env.BEAM_TARGET_SUFFIX}}.exe
        cp wallet/cli/beam-wallet.cfg artifacts/beam-wallet.cfg
        cp wallet/api/${{env.BUILD_CONFIG}}/wallet-api${{env.BEAM_TARGET_SUFFIX}}.exe artifacts/wallet-api${{env.BEAM_TARGET_SUFFIX}}.exe
        cp wallet/api/wallet-api.cfg artifacts/wallet-api.cfg
        cp explorer/${{env.BUILD_CONFIG}}/explorer-node${{env.BEAM_TARGET_SUFFIX}}.exe artifacts/explorer-node${{env.BEAM_TARGET_SUFFIX}}.exe
        cp explorer/explorer-node.cfg artifacts/explorer-node.cfg
        cp wallet/broadcaster/${{env.BUILD_CONFIG}}/broadcaster${{env.BEAM_TARGET_SUFFIX}}.exe artifacts/broadcaster${{env.BEAM_TARGET_SUFFIX}}.exe

    - name: OS name [macos-10.15]
      if: matrix.os == 'macos-10.15'
      run: echo "OS_NAME=${{runner.os}}" >> $GITHUB_ENV

    - name: OS name [ununtu all]
      shell: bash
      if: matrix.os == 'ubuntu-16.04' || matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'
      run: echo "OS_NAME=${{matrix.os}}" >> $GITHUB_ENV

    - name: OS name [windows]
      shell: bash
      if: matrix.os == 'windows-2019'
      run: echo "OS_NAME=${{runner.os}}" >> $GITHUB_ENV

###############################################################################
# Upload
###############################################################################
    - uses: actions/upload-artifact@v2
      with:
        name: beam-node${{env.BEAM_TARGET_SUFFIX}}-${{env.BEAM_VERSION}}-${{env.OS_NAME}}
        path: artifacts/beam-node*
        if-no-files-found: error

    - uses: actions/upload-artifact@v2
      with:
        name: beam-wallet-cli${{env.BEAM_TARGET_SUFFIX}}-${{env.BEAM_VERSION}}-${{env.OS_NAME}}
        path: artifacts/beam-wallet*
        if-no-files-found: error

    - uses: actions/upload-artifact@v2
      with:
        name: wallet-api${{env.BEAM_TARGET_SUFFIX}}-${{env.BEAM_VERSION}}-${{env.OS_NAME}}
        path: artifacts/wallet-api*
        if-no-files-found: error
    
    - uses: actions/upload-artifact@v2
      with:
        name: explorer-node${{env.BEAM_TARGET_SUFFIX}}-${{env.BEAM_VERSION}}-${{env.OS_NAME}}
        path: artifacts/explorer-node*
        if-no-files-found: error

    - uses: actions/upload-artifact@v2
      with:
        name: broadcaster${{env.BEAM_TARGET_SUFFIX}}-${{env.BEAM_VERSION}}-${{env.OS_NAME}}
        path: artifacts/broadcaster*
        if-no-files-found: error
